import math

set reference rhf

molecule becp {
    0 1
    symmetry c1

    C
    C 1 dcc
    C 2 dcc 1 108
    C 3 dcc 2 108 1 0
    C 4 dcc 3 108 2 0
    C 1 drr 2 90  3 90
    C 2 drr 3 90  4 90
    C 3 drr 4 90  5 90
    C 8 dcc 7 108 6 0
    C 9 dcc 8 108 7 0
    H 1 dch 2 126 3 180
    H 2 dch 3 126 4 180
    H 3 dch 4 126 5 180
    H 4 dch 5 126 1 180
    H 5 dch 1 126 2 180
    H 6 dch 7 126 8 180
    H 7 dch 8 126 9 180
    H 8 dch 9 126 10 180
    H 9 dch 10 126 6 180
    H 10 dch 6 126 7 180
    Be 1 dcbe 11 achbe 6 0
    Be 6 dcbe 16 achbe 1 0

    dcc = 1.33
    drr = 5.092
    dch = 1.088
    dcbe = 1.930
    achbe = 128.09

}

do_opt = True

try :
    geostr = "0 1\n"
    with open("diberyllocene.xyz", "r") as fp :
        _ = next(fp)
        for line in fp :
            geostr += line
        becp = geometry(geostr)
    do_opt = False
except Exception as e :
    pass

methods = ["hf/sto-3g"]

retcode = None

optimized = False

try :
    if do_opt :
        optimize("hf/sto-3g")
        optimized = True
    #ens = {meth: energy(meth, return_wfn = True) for meth in methods}
    vibs = {meth: frequency(meth, return_wfn = True) for meth in methods}

    with open("out/data.out", "w+") as data :
        for meth in methods :
            print(meth, file = data)
            print(f"Energy: {vibs[meth][0]}", file = data)
            #homo = ens[meth][1].epsilon_a_subset("AO", "ALL")[ens[meth][1].nalpha()]
            #lumo = ens[meth][1].epsilon_a_subset("AO", "ALL")[ens[meth][1].nalpha() + 1]
            #print(f"HOMO: {homo}\nLUMO: {lumo}\nHOMO-LUMO Gap: {lumo - homo}", file = data)
            print(f"Frequencies: {vibs[meth][1].frequencies()}", file = data)
    
except Exception as e :
    retcode = e

if do_opt and optimized :
    becp.save_xyz_file("diberyllocene.xyz", True)

    fstr = ""
    with open("diberyllocene.xyz", "r") as fp :
        for line in fp :
            newline = line[0]
            for i in range(1, len(line)) :
                if line[i - 1].isupper() and line[i].isupper() :
                    newline += line[i].lower()
                else :
                    newline += line[i]
            fstr += newline

    with open("diberyllocene.xyz", "w") as fp :
        print(fstr, file = fp)

if retcode is not None :
    raise retcode
