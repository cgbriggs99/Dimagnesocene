import math
import os
import time
import pickle

file_name = "methods"
job_id = os.environ["JOB_ID"]

# Minimal geometry from experiment.

becp = geometry("""
0 1
symmetry c1

Be 6.07874 2.45740 2.20602
Be 7.89690 2.43374 3.14396
C 8.72687 2.56070 4.91891
H 8.17652 2.68889 5.84031
C 9.17774 3.60056 4.06841
H 9.03081 4.65933 4.22871
C 9.76230 3.00649 2.92240
H 10.13855 3.53358 2.05701
C 9.67272 1.59945 3.06466
H 9.96894 0.86746 2.32660
C 9.03279 1.32392 4.29858
H 8.75633 0.34533 4.66493
C 5.19099 3.05518 0.55978
H 5.69006 3.57212 -0.24768
C 5.09296 1.64977 0.71226
H 5.50429 0.90896 0.04123
C 4.45261 1.38708 1.94876
H 4.29105 0.41114 2.38432
C 4.15477 2.63011 2.56046
H 3.72671 2.76661 3.54352
C 4.61116 3.66102 1.70205
H 4.59148 4.72016 1.91681
""")

# Convert to bohr first. This fixes unit issues that Psi4 seems to have.
becp.set_units(psi4.core.Bohr)
ideal_bebe = becp.xyz(0).distance(becp.xyz(1))
ideal_bec = min(becp.xyz(0).distance(becp.xyz(2)),
                becp.xyz(1).distance(becp.xyz(2)))
# Convert back.
becp.set_units(psi4.core.Angstrom)

methods = ["hf", "mp2", "b3lyp", "b97-1", "pw6b95", "cisd", "ccsd", "dsd-b3lyp-d3bj"]

basis = "cc-pVDZ"
method = methods[int(os.environ["SGE_TASK_ID"]) - 1]
# First test, energies.
start_time = time.time()
en = energy(method + "/" + basis)
ideal_en = -416.31749560

# Second test, optimized structure.
try :
    optimize(method + "/" + basis)
except psi4.driver.p4util.OptimizationConvergenceError as e :
    task_id = os.environ["SGE_TASK_ID"]
    os.rename("in/be_bond_compare.out", f"out/be_bond_compare-{task_id}.out")
    raise e

end_time = time.time()

# Find the bond lengths. Set to bohr to fix units.
becp.set_units(psi4.core.Bohr)
bebe = becp.xyz(0).distance(becp.xyz(1))
bec = min(becp.xyz(0).distance(becp.xyz(2)),
          becp.xyz(1).distance(becp.xyz(2)))

dat_file = f"out/methods-{job_id}.dat"
txt_file = f"out/methods-{job_id}.txt"
dat_lock = f"out/lock.methods-{job_id}.dat"
txt_lock = f"out/lock.methods-{job_id}.txt"

# Report these in a file, along with their differences.
while os.path.isfile(dat_lock) :
    time.sleep(0.3)

# Obtain a lock and write lines to file.
with open(dat_lock, "w+") as _ :
    with open(dat_file, "ba+") as fp :
        fp.write(pickle.dumps([en, bebe, bec,
                               en - ideal_en, bebe - ideal_bebe,
                               bec - ideal_bec, end_time - start_time, method]))
        fp.write(b'\n')
# Release the lock.        
os.remove(dat_lock)
        

# Make the human readable output, since I seem to have forgotten.
while os.path.isfile(txt_lock) :
    time.sleep(0.3)

with open(txt_lock, "w+") as _ :
    with open(txt_file, "ba+) as fp :
        print(f"Method: {method}, Energy: {en}, Be-Be Distance: {bebe}, Be-C Distance: {bec}", file = fp)
        print(f"Energy Error: {en - ideal_en}, Be-Be Error: {bebe - ideal_bebe}, Be-C Error: {bec - ideal_bec}, Runtime: {end_time - start_time}", file = fp)

os.remove(txt_lock)
        